<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mouchina.dao.user.UserRelationMapper" >
  <resultMap id="BaseResultMap" type="com.mouchina.entity.pojo.user.UserRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="relation_a" property="relationA" jdbcType="BIGINT" />
    <result column="relation_b" property="relationB" jdbcType="BIGINT" />
    <result column="relation_type" property="relationType" jdbcType="TINYINT" />
    <result column="data_id" property="dataId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_time, relation_a, relation_b, relation_type, data_id, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mouchina.entity.pojo.user.UserRelationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from tb_user_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mouchina.entity.pojo.user.UserRelationExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tb_user_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mouchina.entity.pojo.user.UserRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user_relation (id, create_time, relation_a, 
      relation_b, relation_type, data_id, 
      type)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{relationA,jdbcType=BIGINT}, 
      #{relationB,jdbcType=BIGINT}, #{relationType,jdbcType=TINYINT}, #{dataId,jdbcType=BIGINT}, 
      #{type,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mouchina.entity.pojo.user.UserRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tb_user_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="relationA != null" >
        relation_a,
      </if>
      <if test="relationB != null" >
        relation_b,
      </if>
      <if test="relationType != null" >
        relation_type,
      </if>
      <if test="dataId != null" >
        data_id,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relationA != null" >
        #{relationA,jdbcType=BIGINT},
      </if>
      <if test="relationB != null" >
        #{relationB,jdbcType=BIGINT},
      </if>
      <if test="relationType != null" >
        #{relationType,jdbcType=TINYINT},
      </if>
      <if test="dataId != null" >
        #{dataId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mouchina.entity.pojo.user.UserRelationExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from tb_user_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_relation
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.relationA != null" >
        relation_a = #{record.relationA,jdbcType=BIGINT},
      </if>
      <if test="record.relationB != null" >
        relation_b = #{record.relationB,jdbcType=BIGINT},
      </if>
      <if test="record.relationType != null" >
        relation_type = #{record.relationType,jdbcType=TINYINT},
      </if>
      <if test="record.dataId != null" >
        data_id = #{record.dataId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_relation
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      relation_a = #{record.relationA,jdbcType=BIGINT},
      relation_b = #{record.relationB,jdbcType=BIGINT},
      relation_type = #{record.relationType,jdbcType=TINYINT},
      data_id = #{record.dataId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mouchina.entity.pojo.user.UserRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_relation
    <set >
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="relationA != null" >
        relation_a = #{relationA,jdbcType=BIGINT},
      </if>
      <if test="relationB != null" >
        relation_b = #{relationB,jdbcType=BIGINT},
      </if>
      <if test="relationType != null" >
        relation_type = #{relationType,jdbcType=TINYINT},
      </if>
      <if test="dataId != null" >
        data_id = #{dataId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mouchina.entity.pojo.user.UserRelation" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tb_user_relation
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      relation_a = #{relationA,jdbcType=BIGINT},
      relation_b = #{relationB,jdbcType=BIGINT},
      relation_type = #{relationType,jdbcType=TINYINT},
      data_id = #{dataId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select resultMap="BaseResultMap" parameterType="com.mouchina.entity.pojo.user.UserRelationExample" id="selectByExampleWithRowbounds" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user_relation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <!-- 用户粉丝/关注结果集 -->
  <resultMap id="FanOrInterestUsesMap" type="java.util.Map" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="role" property="role" jdbcType="TINYINT" />
    <result column="photo" property="photo" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="TINYINT" />
  </resultMap>
  
  <select resultMap="FanOrInterestUsesMap" parameterType="java.util.Map" id="findMineFanOrInterestUsers" >
    select
    a.id as id,a.create_time as createTime,b.nick_name as nickName,b.id as userId,b.role as role,b.photo as photo,b.state as state
    <choose>
   		<when test="type != null and type == 0">
   			from tb_user_relation a join tb_user_info b on (a.relation_a = b.id) where a.relation_b = (select id from tb_user_info where token = #{loginKey,jdbcType=VARCHAR})
   		</when>
   		<otherwise>
   			from tb_user_relation a join tb_user_info b on (a.relation_b = b.id) where a.relation_a = (select id from tb_user_info where token = #{loginKey,jdbcType=VARCHAR})
   		</otherwise> 
    </choose>
    <if test="order != null" >
      order by ${order}
    </if>
  </select>
  
  <select resultType="java.lang.Integer" parameterType="java.util.Map" id="findMineFanOrInterestUsersCount" >
    select
    count(a.id)
    <choose>
   		<when test="type != null and type == 0">
   			from tb_user_relation a join tb_user_info b on (a.relation_a = b.id) where a.relation_b = (select id from tb_user_info where token = #{loginKey,jdbcType=VARCHAR})
   		</when>
   		<otherwise>
   			from tb_user_relation a join tb_user_info b on (a.relation_b = b.id) where a.relation_a = (select id from tb_user_info where token = #{loginKey,jdbcType=VARCHAR})
   		</otherwise> 
    </choose>
  </select>
  
</mapper>